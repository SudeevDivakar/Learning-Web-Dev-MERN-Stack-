The internet is a global network of interconnected computers that communicate via TCP/IP.

The world wide web is an information system where documents and other resources are available 
over the internet.
Documents are transferred via HTTP.

Web server is a computer system that can satisfy requests on the web .

The client is the computer that accesses the server.

The server sends back instructions to display the code and the web browser displays it in human 
readable format.

Front end is focused on the tools running in the browser (html,css,js)

Backend is focused on the tools running in the server .

HTML is used to create web contents.

CSS helps us add designs to html contents.

JS helps to bring life to the html elements and helps them be active. 

HTML helps to desbribe the structure of a document.(It is a markup language)
Helps to bold elements, make elements links, etc.

Any unstructured text added to a html file gets added to the html webpage as it is.
Adding text in between tags helps to add the data onto the webpage in a structured manner.

(Syntax)
<b>....</b> 
Used to bold all the text present in between it.

Use developer.mozilla.org to search up stuff about web development (It's a wikipedia for web dev)

(Syntax)
<p>....</p>
Used when spacing of text is required. Different paragraph tags occur in different lines.

(Syntax)
<h1>...</h1>
<h2>...</h2>
.
.
.
<h6>...</h6>
Used to add headings onto the webpage. 
Size gradually decreases from h1 to h6.
General rule of thumb to use these headings is to use smaller headings to represent subheadings of the parent heading.
For eg.) <h2> would be a subheading of <h1>
And usually only one <h1> heading tag is used in the webpage.

A html boilerplate(skeleton) needs to be followed in order for the html document to be valid.

The structure is as follows:
<!DOCTYPE html>
<html>
    <head>
        <title>...</title>
    </head>

    <body>
        <---content goes here--->
    </body>
</html>

Doctype helps us specify that we want to use the latest version of html
<html> is the highest level element used and all are other elements are present within this tag. Permitted tags are <head> and <body>. 
<head> only contains data that doesn't show up on the webpage (aka metadata)
<body> contains the contents of the webpage 

(Tip)
!+<tab_key> : returns the html boilerplate. Use it to save time.

(Tip)
ctrl+shift+p : After this, type format document and the html document gets automatically formatted.

(Syntax)
<ol>....</ol> : stands for ordered list and has numbers
<ul>....</ul> : stands for unordered list and has bullet points instead of numbers
<li>..</li> : represents a single element in the list.
You can also have nested lists by adding ul or ol under a list item.

Attributes are data that you can pass inside an html tag. 

(Syntax)
<a href=".....">......</a>
Anchor tag
This creates a link to a specified attribute(href)
When specifying a link, make sure you mention the https://www or else it will search for a file in the directory.

(Syntax)
<img src="...">
Places an image onto the webpage
This is the first tag which does not have a closing tag.
We can also add an alt attribute which gives a decription of the src attribute in case our src attribute is not able to load.

To write comments in html, use <!-- .... -->

Inline elements fit in alongside other elements. e.g) <img>,<a>,etc.
Block level elements take up a whole block of space. e.g) <h1>,<p>,etc.

The <div> element is used so that we can add styles using css to the grouped div elements. (It's a block level element)

The <span> element serves the same purpose as div except it is an inline element. (Used to single out elements and apply styles on them) 

(Syntax)
<hr> : Does not contain a closing tag and creates a thematic break between paragraph-level elements. (Creates a divider)

(Syntax)
<br> : Creates a line break element (Goes to the next line)

(Syntax)
<sup>...</sup> : Makes any text present in between the tags a superscript. e.g) Power of a number

(Syntax)
<sub>...</sub> : Makes any text present in between the tags a subscript. e.g) Chemical formulas

HTML entities are special sequences used in html which are used to access special characters which cannot be typed out or characters which are 
reserved in html. 
These entities start with an & and end with a ;
To find out the entity number, type in "html entity less than", etc. in google
Note:- &,<,> are reserved characters.
https://html.spec.whatwg.org/multipage/named-characters.html

Semantic markups are the same as div elements except they have different names. This is helpful for web crawlers or people who read the html code 
as it helps them find each seperate divison easily (as the semantic markups have meaning). 
Different semantic markups:
<main>...</main> : dominant content of the body of a document. Must exclude stuff that are usually repeated across different webpages. e.g)sidebars,naigation links,etc.
<nav>...</nav> : represents elements on the page that provide navigation content
<section>...</section> : represents a stand alone section of a website
<article>...</article> : used to represent a certain topic. It should contain a header describing the content present.
<aside>...</aside> : elements that are not essential to a webpage.
<header>...</header> : introductory/ navigational content of the page
<footer>...</footer> : navigational/ about content of the page
<time datetime="2016-10-05">......</time> : an inline element which is wrapped around a specified time

Emmet is a feature in vscode that helps us write html codes faster. (Hit tab after all commands)
Child elements : Use the > symbol to create child elements. e.g) nav>ul>li creates a li inside a ul inside a nav.
Sibling elements : Use the + symbol to create sibling elements. e.g) h1+h2+h3 creates a h1,h2 and h3 which are all siblings.
Multiplication : Use * to create multiple instances of an element. e.g) ul>li*5 creates 5 li elements.
 
<table>  </table> : Creates a table

<tr>   </tr> : Contains <td> tags in them which adds data onto a single row in the table

<td>...</td> : Adds a single element onto the table cell

<th>...</th> : Used to add a table header to a cell

<thead>   </thead> : Wraps up the header part of the table for clean semantic markup.
<tbody>   </tbody> : Wraps up the body part of the table for clean semantic markup.
<tfoot>   </tfoot> : Wraps up the footer part of the table for clean semantic markup.

<th colspan="2">...</th> : colspan is used to make a th or td take up the space of the specified amount of columns.
<th rowspan="2">...</th> : rowspan is used to make a th or td take up the space of the specified amount of rows.

form>...</form> : Represents a document section containing interactive protocols for submitting information.
The action attribute specifies where the form data should be sent.
The method attribute specifies which HTTP method should be used.

<input type="" placeholder="" name=""> : Does not have a closing tag. Used to get elements in a specified way.
Placeholder contains the text which will appear on the input box before the user types data into it.
name : When the form is submitted and the data collected from the form is sent to the server, it is sent under the specified value of the attribute name.
Different input types :
text : provides a region to input text
password : provides a region to input obscured text
color : provides a color picker 
number : provides number inputs. Useful when only numbers are required for the input. Can have min and max attributes to specify range
email : Used to take inputs for emails. Emails entered dont have to exist as long as it is a valid email pattern.
url :  Used to take inputs for URLs. URLs entered dont have to exist as long as it is a valid URL pattern.
Type in input types on google to check for different input types.

<label for="">...</label> : Forms a connection between a piece of text and an user input. The for attribute contains an id which is given to an input.
Note : An id cannot be reused for another id name.

<button type="">...</button> : Labelled by whatever is present in between the tags. If no action is specified, the button automatically submits the form to the action 
attribut in the form tag.
Different input types for buttons:
button : creates a button that has no functionality until given one.
submit(default) : submits the form to the action attribute specified in the form tag.

<input type="checkbox" id="" name="" checked> : Used to create a checkbox. Don't forget to label your chexkboxes. checked is an optional command which 
already checks the option by default.

<input type="radio" id="" name="" value="">
Radiobuttons are the same as checkboxes except only one option can be selected at a time.
Radio buttons are associated with each other by giving them similar names.
Different values must be specified for each radiobutton so that different options return back different values

<select id="" name="">
    <option value="">....</option>
    <option value="" selected>....</option>
</select>
The select tag is used to create a drop down selection option.
Each option returns a value to the name attribute.
The selected attribute present in the option tag, selects an option by default if the user does not select one.(optional)

<input type="range" name="" id="" min="" max="" step="" value="">
The range tag creates a slider to choose values between a minimum and maximum range. 
The step attribute is an optional attribute which increases and decreases the value by a specified amount.
value is also an optional attribute which gives the range tag a default value.

<textarea name="" id="" cols="" rows="" placeholder=""></textarea>
Used to input paragraphs of text. 
Can be given a specified number of columns and rows to adjust it's size.
The placeholder attribute displays a text on the input area to provide indication.

Attributes for validation of inputs:
required : It's an attribute with no value and does not allow the user to submit the form unless they have entered data 
minlength : specifies minimum length of text required for valid data
maxlength : specifies maximum length of text possible for valid data
min : minimum value for integer inputs
max : maximum value for integer inputs


